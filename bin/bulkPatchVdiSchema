#!/usr/bin/perl

use strict;
use Getopt::Long;
use DBI;

$| = 1;

my @envVars = ('DB_PLATFORM', 'DB_USER', 'DB_PASS');
my $envStr = '$' . join(", \$", @envVars);
my ($dbNamesStr, $sqlFile, $forReal);

my @lifecycles = ('dev', 'qa', 'beta', 'feat', 'prod');
my @campuses = ('n', 's');

&GetOptions("dbNames=s" => \$dbNamesStr,
	    "sqlFile=s" => \$sqlFile,
	    "forReal" => \$forReal); # if false, don't really execute the SQL

my @dbNames = split(/,\s*/, $dbNamesStr);

if (scalar @dbNames < 1) {
  die "

Iterates through all VDI schemas on the specified databases, and applies a db patch found in provided SQL file.

SQL file can include macro \@SUFFIX\@ which will be replaced by, eg, QA_N

SQL file can contain multiple statements ending with ';'.  Each will be executed in order on each database.

Usage: bulkPatchVdiSchema --dbNames 'plas-inc, toxo-inc' --sqlFile myFile [--forReal]

Required environment variables: $envStr

Include the following in your bash environment or on the command line preceding the command below:
export DB_PLATFORM=Oracle export DB_USER=MY-LOGIN export DB_PASS=MY-PASSWORD

Example: ./bulkPatchVdiSchema --dbNames 'plas-inc, toxo-inc' --sqlFile myfile

Full list of inc databases: ameb-inc,cryp-inc,eda-inc,fung-inc,giar-inc,host-inc,micr-inc,piro-inc,plas-inc,toxo-inc,tryp-inc,tvag-inc,vect-inc
";
}

for my $envVar (@envVars) { die "Missing env variable '$envVar'\n" unless $ENV{$envVar}; }

die "Can't find sql file $sqlFile\n" unless -e $sqlFile;

open my $fh, '<', $sqlFile or die "error opening $sqlFile: $!";
my $sqls = do { local $/; <$fh> };

my @sqlList = split(/;\s+/, $sqls);

foreach my $dbname (@dbNames) {
  my $dbh = DBI->connect("dbi:Oracle:$dbname", $ENV{DB_USER}, $ENV{DB_PASS})
    || die "Couldn't connect to database $dbname: " . DBI->errstr;
  $dbh->{RaiseError} = 1;
  $dbh->{AutoCommit} = 1;
  print STDERR "Database: $dbname\n";
  foreach my $lifecycle (@lifecycles) {
    foreach my $campus (@campuses) {
      my $suffix = "${lifecycle}_$campus";
      foreach my $sql (@sqlList) {
        my $newSql = $sql;
	$newSql =~ s/\@SUFFIX\@/$suffix/g;
	print STDERR "DB: $dbname SUFFIX: $suffix\n";
	print STDERR ($forReal? "FOR REAL" : "DRY RUN") . " - SQL: \n$newSql\n\n";
	if ($forReal) {
	  $dbh->do($newSql);
	}
      }
    }
  }
  $dbh->disconnect();
}

my $s = $forReal? "FOR REAL " : "DRYRUN ";
print STDERR "\n${s}Done.\n";
